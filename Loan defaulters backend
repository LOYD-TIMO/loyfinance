person-search/       (or directly in your repo root)
├── server.js
├── package.json
├── package-lock.json
├── .gitignore
├── seed.js         (optional, for inserting test data)
└── README.md       (optional)
const express = require('express');
const sqlite3 = require('sqlite3').verbose();
const cors = require('cors');
const path = require('path');

const app = express();
app.use(cors());
app.use(express.json());

// Database file
const dbFile = path.join(__dirname, 'people.db');
const db = new sqlite3.Database(dbFile);

// Create table if not exists
db.run(`CREATE TABLE IF NOT EXISTS people(
  id INTEGER PRIMARY KEY AUTOINCREMENT,
  name TEXT,
  bio TEXT,
  email TEXT,
  photo_url TEXT
)`);

// Search endpoint
app.get('/api/search', (req, res) => {
  const q = (req.query.q || '').toLowerCase();
  if (!q) return res.json({ results: [] });

  const sql = `SELECT id, name, bio, email, photo_url AS photo
               FROM people
               WHERE LOWER(name) LIKE ? LIMIT 50`;
  db.all(sql, [`%${q}%`], (err, rows) => {
    if (err) return res.status(500).json({ error: err.message });
    res.json({ results: rows });
  });
});

// Optional: add new people
app.post('/api/add', (req, res) => {
  const { name, bio, email, photo_url } = req.body;
  db.run(
    'INSERT INTO people(name,bio,email,photo_url) VALUES(?,?,?,?)',
    [name, bio, email, photo_url],
    function (err) {
      if (err) return res.status(500).json({ error: err.message });
      res.json({ id: this.lastID });
    }
  );
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => console.log(`Server running on port ${PORT}`));
{
  "name": "person-search",
  "version": "1.0.0",
  "main": "server.js",
  "scripts": {
    "start": "node server.js"
  },
  "dependencies": {
    "express": "^4.18.2",
    "sqlite3": "^5.1.2",
    "cors": "^2.8.5"
  }
}
node_modules/
people.db
const sqlite3 = require('sqlite3').verbose();
const db = new sqlite3.Database('people.db');

db.run('INSERT INTO people(name,bio,email,photo_url) VALUES (?,?,?,?)',
  ['John Doe','Software engineer at ExampleCo','john@example.com','https://via.placeholder.com/100']);
db.run('INSERT INTO people(name,bio,email,photo_url) VALUES (?,?,?,?)',
  ['Jane Smith','Graphic designer from NY','jane@example.com','https://via.placeholder.com/100']);

db.close();
node seed.js
# Person Search API
A simple Node.js + Express + SQLite backend for searching people.
git init
git add .
git commit -m "Initial backend setup"
git branch -M main
git remote add origin https://github.com/YOUR-USERNAME/person-search.git
git push -u origin main

